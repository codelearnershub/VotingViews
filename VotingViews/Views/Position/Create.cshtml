@model VotingViews.Model.Entity.Position

@{
    ViewData["pageTitle"] = "Create Position";
    Layout = "_DashboardLayoutAdmin";
}

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" >
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ElectionId" class="text-danger"></label>
                <select class="form-control" name="ElectionId" asp-items="@ViewBag.Elections"></select>
                <span asp-validation-for="ElectionId" class="text-danger"></span>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(x=> Model.Election, htmlAttributes: new { @class ="control-label col-md-2"})
                <div class="col-md-5">
                    @Html.DropDownListFor(x=> Model.Election, new SelectList(Model.Elections, "Value", "Text"), htmlAttributes : new { @class = " form-control", id = "Election" })
                    @Html.ValidationMessageFor(x=> x.Election, "", new { @class ="text-danger"})
                </div>
            </div>*@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
